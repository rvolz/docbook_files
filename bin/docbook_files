#!/usr/bin/env ruby
# -*-encoding:utf-8 ; mode:ruby-*-
##
#

require 'rubygems'
#require "bundler/setup"
require 'optparse'
#require 'yaml'
#require 'json'
#require 'term/ansicolor'

#class String
#  include Term::ANSIColor
#end


require File.expand_path(File.join(File.dirname(__FILE__), %w[.. lib docbook_files]))

banner = <<EOB
docbook_files, Version #{DocbookFiles::VERSION}

Display DocBook 5 document file information.

Usage: docbook_files [options] <DOCBOOK-FILE>
EOB

@output_format = :screen

opts = OptionParser.new
opts.banner = banner
rest = opts.parse(ARGV)

# Print banner if called without arguments
if rest.length < 1
  puts opts.to_s
  exit 1
end

unless File.exists?(rest[0])
  STDERR.puts "Error: File #{rest[0]} not found."
  exit 1
end

# The main routine
puts("docbook_status, Version #{DocbookFiles::VERSION}") if @output_format == :screen
dbf = DocbookFiles::Docbook.new(rest[0])
names = dbf.list_names()

def olist(lst,ndx=0)
	lst.each {|l|
		if l.class == String
			puts ('  '*ndx)+l
		else
			olist(l,ndx+1)
		end
	}
end
puts
puts 'Include Hierarchy'
puts '-'*80
olist(names)
